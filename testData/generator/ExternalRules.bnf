{
  parserClass="ExternalRules"
  generatePsi=false
  stubParserClass="org.intellij.grammar.parser.GeneratedParserUtilBase"
}

root ::= <<listOf statement>>

statement ::= simple_case | complex_case | complex_case_brackets | complex_case_braces | multi_complex_case
simple_case ::= DO <<uniqueListOf "zero" one two 10 some>> END
complex_case ::= DO <<uniqueListOf (one | two | 10 | some)>> END
complex_case_brackets ::= DO <<uniqueListOf [one | two | 10 | some]>> END
complex_case_braces ::= DO <<uniqueListOf {one | two | 10 | some}>> END
multi_complex_case ::= DO <<uniqueListOf {one | two} [10 | some]>> (option) END
one ::= some value
two ::= some other value
one_list ::= <<comma_list one>>
private one_list_with ::= <<comma_list_with_head (WITH) one>>
meta comma_list ::= <<param>> (',' <<param>>) *
meta comma_list_with_head ::= <<head>> <<param>> (',' <<param>>) *

private meta meta_root ::= <<listOf "1+2" '1+2' <<param>>>>
private meta_root_usage ::= <<meta_root statement>>
private recursive_meta_rule_usage ::= <<comma_list (<<comma_list one>>)>>
private recursive_meta_rule_usage_no_parens ::= <<comma_list <<comma_list one>>>>
private recursive_meta_rule_usage_no_parens2 ::= <<comma_list <<comma_list <<comma_list one>>>>>>